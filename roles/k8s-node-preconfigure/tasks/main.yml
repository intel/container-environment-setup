---
- name: install jmespath on the Ansible host
  pip:
    name: jmespath

# update i40e and i40evf drivers
- include: "i40e-drivers-update.yml"
  when: force_nic_drivers_update | default(false) | bool

- include_role:
    name: install-ddp-pkgs
  when:
    - install_ddp_packages | default(false) | bool

- name: set default grub flags values
  set_fact:
    hugepages_flags: ""
    isolcpus_flags: ""
    sriov_flags: ""

## hugepages ##
- name: validate default hugepage size setting
  assert: { that: default_hugepage_size == "2M" or default_hugepage_size == "1G" }
  when: hugepages_enabled | default(false)
- name: validate that any hugepages of default size are requested
  assert: { that: hugepages_1G > 0 }
  when: default_hugepage_size == "1G" and hugepages_enabled | default(false)
- name: validate that any hugepages of default size are requested
  assert: { that: hugepages_2M > 0 }
  when: default_hugepage_size == "2M" and hugepages_enabled | default(false)

- name: set hugepages kernel boot flags
  set_fact:
    hugepages_flags: >-
      default_hugepagesz={{ default_hugepage_size }}
      {% if hugepages_1G > 0 %}hugepagesz=1G hugepages={{ hugepages_1G | int }}{% endif %}
      {% if hugepages_2M > 0 %}hugepagesz=2M hugepages={{ hugepages_2M | int }}{% endif %}
  when:
    - hugepages_enabled | default(false)

## CPU isolation ##
- name: validate isolcpus settings
  assert:
    that: isolcpus | length > 0
    fail_msg: "CPU isolation enabled, but no CPUs to isolate provided"
  when: isolcpus_enabled

- name: set isolcpus flags
  set_fact:
    isolcpus_flags: "isolcpus={{ isolcpus }} rcu_nocbs={{ isolcpus }} nohz_full={{ isolcpus }}"
  when:
    - isolcpus_enabled | default(false)

- name: set isolcpus flags in /etc/default/grub if missing
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="(?!.* isolcpus=)(.*)"'
    line: 'GRUB_CMDLINE_LINUX="\1 {{ isolcpus_flags }}"'
    state: present
    backrefs: yes
  register: isolcpus_parameters_added
  when:
    - isolcpus_flags | length > 0

- name: change isolcpus flags in /etc/default/grub if present
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX=(.*)(?:isolcpus=.* rcu_nocbs=.* nohz_full=(?:[0-9](?:-[0-9]+){0,1},{0,1})+)(.*)$'
    line: 'GRUB_CMDLINE_LINUX=\1{{ isolcpus_flags }}\2'
    state: present
    backrefs: yes
  register: isolcpus_parameters_changed
  when:
    - isolcpus_flags | length > 0

## SRIOV ##
- name: set kernel flags required for SR-IOV
  set_fact:
    sriov_flags: "intel_iommu=on iommu=pt pci=realloc pci=assign-busses"
  when:
    - sriov_enabled | default(false)

- name: set sriov kernel boot flags in /etc/default/grub
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="(?!.* intel_iommu=)(.*)"'
    line: 'GRUB_CMDLINE_LINUX="\1 {{ sriov_flags }}"'
    state: present
    backrefs: yes
  register: sriov_parameters
  when:
    - sriov_flags | length > 0

- name: set hugepages kernel boot flags in /etc/default/grub
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="(?!.* default_hugepagesz=)(.*)"'
    line: 'GRUB_CMDLINE_LINUX="\1 {{ hugepages_flags }}"'
    state: present
    backrefs: yes
  register: hugepages_add
  when:
    - hugepages_flags | length > 0

- name: update hugepages kernel boot flags in /etc/default/grub if needed
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX=(.*)(?:default_hugepagesz=(?:2M|1G)(?:[ ]+hugepagesz=(?:2M|1G)[ ]+hugepages=[0-9]+){1,2})(.*)$'
    line: 'GRUB_CMDLINE_LINUX=\1{{ hugepages_flags }}\2'
    state: present
    backrefs: yes
  register: hugepages_update
  when:
    - hugepages_flags | length > 0

- name: check whether any grub parameters have changed
  set_fact:
    parameters_changed: isolcpus_parameters_changed.changed or isolcpus_parameters_added.changed or sriov_parameters.changed or hugepages_add.changed or hugepages_update.changed

- name: update grub.cfg
  command: update-grub
  when:
    - ansible_os_family == "Debian"
    - parameters_changed

- name: check if grub2.cfg config file exists (MBR variant)
  stat:
    path: /etc/grub2.cfg
  register: grub_mbr_cfg
  when:
    - ansible_os_family == "RedHat"
    - parameters_changed

- name: update MBR grub2.cfg
  command: grub2-mkconfig -o /etc/grub2.cfg
  when:
  - ansible_os_family == "RedHat"
  - parameters_changed
  - grub_mbr_cfg.stat.exists

- name: check if grub2-efi.cfg config file exists (EFI variant)
  stat:
    path: /etc/grub2-efi.cfg
  register: grub_efi_cfg
  when:
    - ansible_os_family == "RedHat"
    - parameters_changed

- name: update MBR grub2-efi.cfg
  command: grub2-mkconfig -o /etc/grub2-efi.cfg
  when:
  - ansible_os_family == "RedHat"
  - parameters_changed
  - grub_efi_cfg.stat.exists

- name: reboot with the new kernel parameters
  reboot: { reboot_timeout: 1200 }
  when: parameters_changed

- name: discover QAT Physical Functions
  shell: for i in 0435 37c8 19e2 6f54 18a0; do lspci -d 8086:$i -D | awk '{ print $1 }'; done
  register: qat_pf

- name: reset SR-IOV Virtual Functions for QAT devices
  shell: echo 0 > /sys/bus/pci/devices/{{ item }}/sriov_numvfs
  with_items: "{{ qat_pf | json_query('stdout_lines[]') }}"
  failed_when: false

- name: enable SR-IOV Virtual Functions for QAT devices
  shell: echo {{ sriov_numvfs }} > "/sys/bus/pci/devices/{{ item }}/sriov_numvfs"
  with_items: "{{ qat_pf | json_query('stdout_lines[]') }}"
  failed_when: false
